{"mappings":"AASA,MAAMA,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,SAAUC,eAElCC,QAAQC,IAAIN,EAAOO","sources":["src/js/03-promises.js"],"sourcesContent":["\n// createPromise(promise[i], delay);\n\n// setTimeout(() => {\n//   setInterval(() => {}, step);\n// }, delay);\n\n// const submitBtn = document.querySelector(button[(type = 'submit')]);\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', createPromise);\n\nconsole.log(formEl.amount);\n\n// let formData = new FormData(formEl);\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(position, delay);\n//       } else {\n//         reject(position, delay);\n//       }\n//     }, delay);\n//   });\n// }\n\n// function numberOfPromises(amount, step) {\n//   for (let i = 1; i <= amount; i += 1) {\n//     setTimeout(() => {\n//       createPromise();\n//     }, step);\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     fulfill();\n//   } else {\n//     reject();\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","createPromise","console","log","amount"],"version":3,"file":"03-promises.9a690731.js.map"}